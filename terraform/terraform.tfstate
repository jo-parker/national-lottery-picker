{
  "version": 4,
  "terraform_version": "0.12.29",
  "serial": 10,
  "lineage": "9e26de3f-3b20-8c44-f39e-d5c6e06eed3a",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "ecs_service",
      "provider": "provider.aws",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 0,
          "attributes": {
            "capabilities": null,
            "disable_rollback": null,
            "iam_role_arn": null,
            "id": "arn:aws:cloudformation:eu-west-1:295595762341:stack/national-lottery-picker-svc-stack/a9b2a100-ca2c-11eb-8cb7-069d6091c759",
            "name": "national-lottery-picker-svc-stack",
            "notification_arns": null,
            "on_failure": null,
            "outputs": null,
            "parameters": {
              "ClusterName": "national-lottery-picker-cluster",
              "ContainerMemory": "1024",
              "ECSTaskExecutionRole": "national-lottery-picker-ecs-execution-role",
              "ServiceName": "national-lottery-picker-service"
            },
            "policy_body": null,
            "policy_url": null,
            "tags": null,
            "template_body": "AWSTemplateFormatVersion: '2010-09-09'\nDescription: Deploy a service on AWS Fargate.\nParameters:\n  StackName:\n    Type: String\n    Default: production\n    Description: The name of the parent Fargate networking stack that you created. Necessary\n                 to locate and reference resources created by that stack.\n  ServiceName:\n    Type: String\n    Default: national-lottery-picker\n    Description: A name for the service\n  ClusterName:\n    Type: String\n    Default: national-lottery-picker-cluster\n    Description: A name for the cluster\n  ImageUrl:\n    Type: String\n    Default: docker.io/jpparker/national-lottery-picker\n    Description: The url of a docker image that contains the application process that\n                 will handle the traffic for this service\n  ContainerCpu:\n    Type: Number\n    Default: 256\n    Description: How much CPU to give the container. 1024 is 1 CPU\n  ContainerMemory:\n    Type: Number\n    Default: 512\n    Description: How much memory in megabytes to give the container\n  \n  Priority:\n    Type: Number\n    Default: 1\n    Description: The priority for the routing rule added to the load balancer.\n                 This only applies if your have multiple services which have been\n                 assigned to different paths on the load balancer.\n  DesiredCount:\n    Type: Number\n    Default: 1\n    Description: How many copies of the service task to run\n  ECSTaskExecutionRole:\n    Type: String\n    Default: \"national-lottery-picker-ecs-execution-role\"\n  Role:\n    Type: String\n    Default: \"\"\n    Description: (Optional) An IAM role to give the service's containers if the code within needs to\n                 access other AWS resources like S3 buckets, DynamoDB tables, etc\n\nConditions:\n  HasCustomRole: !Not [ !Equals [!Ref 'Role', ''] ]\n\nResources:\n\n  # The task definition. This is a simple metadata description of what\n  # container to run, and what resource requirements it has.\n  TaskDefinition:\n    Type: AWS::ECS::TaskDefinition\n    Properties:\n      Family: !Ref 'ServiceName'\n      Cpu: !Ref 'ContainerCpu'\n      Memory: !Ref 'ContainerMemory'\n      RequiresCompatibilities:\n        - FARGATE\n      ExecutionRoleArn:\n        Fn::ImportValue:\n          !Join [':', [!Ref 'StackName', 'ECSTaskExecutionRole']]\n      TaskRoleArn:\n        Fn::If:\n          - 'HasCustomRole'\n          - !Ref 'Role'\n          - !Ref \"AWS::NoValue\"\n      ContainerDefinitions:\n        - Name: !Ref 'ServiceName'\n          Image: !Ref 'ImageUrl'\n          Essential: true\n          Environment:\n            - Name: VERSION_INFO\n              Value: 'v0'\n            - Name: BUILD_DATE\n              Value: '-'\n\n  # The service. The service is a resource which allows you to run multiple\n  # copies of a type of task, and gather up their logs and metrics, as well\n  # as monitor the number of running tasks and replace any that have crashed\n  Service:\n    Type: AWS::ECS::Service\n    Properties:\n      ServiceName: !Ref 'ServiceName'\n      Cluster:\n        Fn::ImportValue:\n          !Join [':', [!Ref 'StackName', 'ClusterName']]\n      LaunchType: FARGATE\n      DeploymentConfiguration:\n        MaximumPercent: 200\n        MinimumHealthyPercent: 75\n      DesiredCount: !Ref 'DesiredCount'\n      TaskDefinition: !Ref 'TaskDefinition'\n\n",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19"
        }
      ]
    }
  ]
}

// Code generated by MockGen. DO NOT EDIT.
// Source: lottery.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/jpparker/national-lottery-picker/internal/pkg/model"
)

// MockLottery is a mock of Lottery interface.
type MockLottery struct {
	ctrl     *gomock.Controller
	recorder *MockLotteryMockRecorder
}

// MockLotteryMockRecorder is the mock recorder for MockLottery.
type MockLotteryMockRecorder struct {
	mock *MockLottery
}

// NewMockLottery creates a new mock instance.
func NewMockLottery(ctrl *gomock.Controller) *MockLottery {
	mock := &MockLottery{ctrl: ctrl}
	mock.recorder = &MockLotteryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLottery) EXPECT() *MockLotteryMockRecorder {
	return m.recorder
}

// EnterDraw mocks base method.
func (m *MockLottery) EnterDraw(draw model.Draw, credentials model.Credentials) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnterDraw", draw, credentials)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnterDraw indicates an expected call of EnterDraw.
func (mr *MockLotteryMockRecorder) EnterDraw(draw, credentials interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnterDraw", reflect.TypeOf((*MockLottery)(nil).EnterDraw), draw, credentials)
}
